#!/bin/sh
#Wallch WallpaperChanger -A tool for having fun changing desktop wallpapers-
#Copyright © 2010-2011 by Leon Vytanos and Alex Solanos
#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 3
#of the License, or (at your option) any later version.
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
language=`sed -n '1p' /home/$USER/.config/Wallch/Settings`
keep_history=`sed -n '5p' /home/$USER/.config/Wallch/Settings`
history_path=`cat ~/.config/Wallch/Checks/history_custom_path`
show_notification=`sed -n '2p' /home/$USER/.config/Wallch/Settings`
#If show_notification=1, then is enabled, else is not
play_sound=`sed -n '4p' /home/$USER/.config/Wallch/Settings`
#same with play_sound
delay=`cat ~/.config/Wallch/Checks/delay`
#this was written by the c++ program. it's the (seconds + 60*minutes) secs. High level mathZ
random_image=`cat ~/.config/Wallch/Checks/randomimage`
random_time=`cat ~/.config/Wallch/Checks/randomtime`
randomold=0
if [ -s "$history_path" ]; then false
else
if [ X"$history_path" != X"" ]; then
echo "History path not valid! $history_path does not exist! Saving the history at /home/$USER/.config/Wallch/History/";
mkdir -p /home/$USER/.config/Wallch/History/
fi
history_path="/home/$USER/.config/Wallch/History/"
fi
if [ X"$show_notification" = X"Show notification: True" ]; then notification="On"; else notification="Off"; fi
if [ X"$play_sound" = X"Play Sound: True" ]; then sound="On"; else sound="Off"; fi

write_history(){
if [ `date '+%a'` = "Mon" ]; then now="Mondays"
elif [ `date '+%a'` = "Tue" ]; then now="Tuesdays"
elif [ `date '+%a'` = "Wed" ]; then now="Wednesdays"
elif [ `date '+%a'` = "Thu" ]; then now="Thursdays"
elif [ `date '+%a'` = "Fri" ]; then now="Fridays"
elif [ `date '+%a'` = "Sat" ]; then now="Saturdays"
else now="Sundays"; fi
if [ X"$history_path" != X"" ]; then #if there is custom history path specified and does exist
if [ X"$keep_history" = X"Keep history of: monthenday" ]; then
echo `date '+%a'` `date '+%d'` `date '+%h'` Image:$image $show_notification $play_sound >> "$history_path"/History_$now
fi
if [ X"$keep_history" = X"Keep history of: monthendayentime" ]; then
echo `date '+%a'` `date '+%d'` `date '+%h'` `date '+%r'` Image:$image $show_notification $play_sound >> "$history_path"/History_$now
fi
if [ X"$keep_history" = X"Keep history of: monthendayentimeensecs" ]; then
echo `date '+%a'` `date '+%d'` `date '+%h'` `date '+%r'` `date '+%s'` Image:$image $show_notification $play_sound >> "$history_path"/History_$now
fi
fi #END of if there is path specified
}

playsound(){
if [ X"$play_sound" = X"Play Sound: True" ]; then
canberra-gtk-play -f /usr/share/wallch/files/notification.ogg&
fi
if [ X"$play_sound" = X"Play Sound: True + Custom Sound" ]; then
soundfile=`cat ~/.config/Wallch/Checks/text_to_button`
ext_of_file=`echo $soundfile | sed -n 's/\(^.[^$]*\)\(.\{3\}$\)/\2/p'`
if [ X"$ext_of_file" = X"mp3" -o X"$ext_of_file" = X"MP3"  ]; then
mpg321 "$soundfile" 2> /dev/null&
fi
if [ X"$ext_of_file" = X"wav" -o X"$ext_of_file" = X"ogg" -o X"$ext_of_file" = X"WAV" -o X"$ext_of_file" = X"OGG" ]; then
canberra-gtk-play -f "$soundfile"&
fi
fi
}
shownotification(){
if [ X"$show_notification" = X"Show notification: True" ]; then #show notification
killall -v notify-osd 2> /dev/null
if [ X"$language" = X"Language: English" ]; then
notify-send "Your Desktop Wallpaper has just changed to the image shown on the left." -i "$image"
else
notify-send "Η εικόνα της επιφάνειας εργασίας σας έχει μόλις αλλάξει στην εικόνα αριστερά!" -i "$image"
fi
fi
}

if [ X"$1" = X"normal" ]; then
lines=`wc -l < ~/.config/Wallch/Checks/to_be_fixed`
else
lines=`wc -l < ~/.config/Wallch/Checks/to_be_fixed_on_launch`
fi
#This will be done with ONLY random image enabled!						####################################
while [ $random_image -ne 0 -a $random_time -eq 0 ]; do
while [ $lines -eq 2 ]; do #if lines are only 2
if [ X"$1" = X"normal" ]; then
image=`sed -n '2p' ~/.config/Wallch/Checks/to_be_fixed`
else
image=`sed -n '2p' ~/.config/Wallch/Checks/to_be_fixed_on_launch`
fi
gconftool-2 --type string --set /desktop/gnome/background/picture_filename "$image"
shownotification
playsound
write_history
sleep $delay
if [ X"$1" = X"normal" ]; then
yesorno=`cat ~/.config/Wallch/Checks/to_be_fixed`
if [ X"$yesorno" = X"" ]; then exit; fi
image=`sed -n '1p' ~/.config/Wallch/Checks/to_be_fixed`
else
image=`sed -n '1p' ~/.config/Wallch/Checks/to_be_fixed_on_launch`
fi
gconftool-2 --type string --set /desktop/gnome/background/picture_filename "$image"
shownotification
playsound
write_history
sleep $delay
done
randomold=$image
b=`cat ~/.config/Wallch/Checks/randomimage`
if [ X"$1" = X"normal" ]; then
image=$(sed -n "${b}p;${b}q" ~/.config/Wallch/Checks/to_be_fixed)
else
image=$(sed -n "${b}p;${b}q" ~/.config/Wallch/Checks/to_be_fixed_on_launch)
fi
randomnew=$image
if [ X"$randomold" = X"$randomnew" ]; then
b=`expr $b + 1`
if [ $b -gt $lines ]; then
b=`expr $b - 2`
#c=$b
fi
if [ X"$1" = X"normal" ]; then
image=$(sed -n "${b}p;${b}q" ~/.config/Wallch/Checks/to_be_fixed)
else
image=$(sed -n "${b}p;${b}q" ~/.config/Wallch/Checks/to_be_fixed_on_launch)
fi
fi
gconftool-2 --type string --set /desktop/gnome/background/picture_filename "$image"
shownotification
playsound
write_history
sleep $delay
done
#Only RANDOM TIME						####################################
while [ $random_image -eq 0 -a $random_time -ne 0 ]; do
delay=`cat ~/.config/Wallch/Checks/randomtime`
echo 1 > ~/.config/Wallch/Checks/current_line
a=1
b=`cat ~/.config/Wallch/Checks/this_to_show_next_time`
if [ X"$1" = X"normal" ]; then
firstimage=`sed -n '1p' ~/.config/Wallch/Checks/to_be_fixed`
else
firstimage=`sed -n '1p' ~/.config/Wallch/Checks/to_be_fixed_on_launch`
fi
while [ $a -eq 1 ]; do
b=`cat ~/.config/Wallch/Checks/this_to_show_next_time`
imageold=$image
if [ $b -eq $lines ]; then b=`expr $b + 1`; fi
if [ X"$b" = X"" ]; then b=1; fi
if [ $b -gt $lines ]; then b=$lines; fi
start_pressed=`expr $b + 1`
if [ $start_pressed -gt $lines ]; then start_pressed=1; fi
echo $start_pressed > ~/.config/Wallch/Checks/this_to_show_next_time
if [ X"$1" = X"normal" ]; then
image=$(sed -n "${b}p;${b}q" ~/.config/Wallch/Checks/to_be_fixed)
else
image=$(sed -n "${b}p;${b}q" ~/.config/Wallch/Checks/to_be_fixed_on_launch)
fi
imagenew=$image
if [ X"$imagenew" = X"$imageold" ]; then
image=$firstimage
b=1
fi
echo $b > ~/.config/Wallch/Checks/current_line
gconftool-2 --type string --set /desktop/gnome/background/picture_filename "$image"
shownotification
playsound
write_history
sleep $delay
done 
done
#Both Random image AND Random time						####################################
while [ $random_image -ne 0 -a $random_time -ne 0 ]; do
delay=`cat ~/.config/Wallch/Checks/randomtime`
randomold=$image
b=`cat ~/.config/Wallch/Checks/randomimage`
if [ X"$(gconftool-2 --get /desktop/gnome/background/picture_filename)" = X"$(sed -n "${b}p;${b}q" ~/.config/Wallch/Checks/to_be_fixed)" ]; then
if [ $b -eq $lines ]; then
b=1;
else
b=`expr $b + 1`;
fi
fi
if [ X"$1" = X"normal" ]; then
image=$(sed -n "${b}p;${b}q" ~/.config/Wallch/Checks/to_be_fixed)
else
image=$(sed -n "${b}p;${b}q" ~/.config/Wallch/Checks/to_be_fixed_on_launch)
fi
randomnew=$image
if [ X"$randomold" = X"$randomnew" ]; then
c=$b
fi
gconftool-2 --type string --set /desktop/gnome/background/picture_filename "$image"
shownotification
playsound
write_history
sleep $delay
done
#Neither Random image nor Random time						####################################
echo 1 > ~/.config/Wallch/Checks/current_line
a=1
b=`cat ~/.config/Wallch/Checks/this_to_show_next_time`
if [ X"$1" = X"normal" ]; then
firstimage=`sed -n '1p' ~/.config/Wallch/Checks/to_be_fixed`
else
firstimage=`sed -n '1p' ~/.config/Wallch/Checks/to_be_fixed_on_launch`
fi
while [ $a -eq 1 ]; do
b=`cat ~/.config/Wallch/Checks/this_to_show_next_time`
imageold=$image
if [ $b -eq $lines ]; then b=`expr $b + 1`; fi
if [ X"$b" = X"" ]; then b=1; fi
if [ $b -gt $lines ]; then b=$lines; fi
start_pressed=`expr $b + 1`
if [ $start_pressed -gt $lines ]; then start_pressed=1; fi
echo $start_pressed > ~/.config/Wallch/Checks/this_to_show_next_time
if [ X"$1" = X"normal" ]; then
image=$(sed -n "${b}p;${b}q" ~/.config/Wallch/Checks/to_be_fixed)
else
image=$(sed -n "${b}p;${b}q" ~/.config/Wallch/Checks/to_be_fixed_on_launch)
fi
imagenew=$image
if [ X"$imagenew" = X"$imageold" ]; then
image=$firstimage
b=1
fi
echo $b > ~/.config/Wallch/Checks/current_line
gconftool-2 --type string --set /desktop/gnome/background/picture_filename "$image"
shownotification
playsound
write_history
sleep $delay
done 
